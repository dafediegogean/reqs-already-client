package br.com.reqs.already.api.v1.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;

/**
 * This class was generated by Apache CXF 2.7.13
 * 2021-03-13T21:50:37.296-03:00
 * Generated source version: 2.7.13
 * 
 */
@WebService(targetNamespace = "http://ws.v1.api.already.reqs.com.br/", name = "ProdutoWS")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ProdutoWS {

    @WebMethod
    @Action(input = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoByIdRequest", output = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoByIdResponse", fault = {@FaultAction(className = AuthorizationException.class, value = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutoById/Fault/AuthorizationException")})
    @WebResult(name = "getProdutoByIdResponse", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", partName = "result")
    public GetProdutoByIdResponse getProdutoById(
        @WebParam(partName = "parameters", name = "getProdutoById", targetNamespace = "http://ws.v1.api.already.reqs.com.br/")
        GetProdutoById parameters,
        @WebParam(partName = "token", name = "token", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", header = true)
        Token token
    ) throws AuthorizationException;

    @WebMethod
    @Action(input = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProdutoRequest", output = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProdutoResponse", fault = {@FaultAction(className = AuthorizationException.class, value = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/atualizarProduto/Fault/AuthorizationException")})
    @WebResult(name = "atualizarProdutoResponse", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", partName = "result")
    public AtualizarProdutoResponse atualizarProduto(
        @WebParam(partName = "parameters", name = "atualizarProduto", targetNamespace = "http://ws.v1.api.already.reqs.com.br/")
        AtualizarProduto parameters,
        @WebParam(partName = "token", name = "token", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", header = true)
        Token token
    ) throws AuthorizationException;

    @WebMethod
    @Action(input = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutosRequest", output = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutosResponse", fault = {@FaultAction(className = AuthorizationException.class, value = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/getProdutos/Fault/AuthorizationException")})
    @WebResult(name = "getProdutosResponse", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", partName = "result")
    public GetProdutosResponse getProdutos(
        @WebParam(partName = "parameters", name = "getProdutos", targetNamespace = "http://ws.v1.api.already.reqs.com.br/")
        GetProdutos parameters,
        @WebParam(partName = "token", name = "token", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", header = true)
        Token token
    ) throws AuthorizationException;

    @WebMethod
    @Action(input = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProdutoRequest", output = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProdutoResponse", fault = {@FaultAction(className = AuthorizationException.class, value = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/removerProduto/Fault/AuthorizationException")})
    @WebResult(name = "removerProdutoResponse", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", partName = "result")
    public RemoverProdutoResponse removerProduto(
        @WebParam(partName = "parameters", name = "removerProduto", targetNamespace = "http://ws.v1.api.already.reqs.com.br/")
        RemoverProduto parameters,
        @WebParam(partName = "token", name = "token", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", header = true)
        Token token
    ) throws AuthorizationException;

    @WebMethod
    @Action(input = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProdutoRequest", output = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProdutoResponse", fault = {@FaultAction(className = AuthorizationException.class, value = "http://ws.v1.api.already.reqs.com.br/ProdutoWS/criarProduto/Fault/AuthorizationException")})
    @WebResult(name = "criarProdutoResponse", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", partName = "result")
    public CriarProdutoResponse criarProduto(
        @WebParam(partName = "parameters", name = "criarProduto", targetNamespace = "http://ws.v1.api.already.reqs.com.br/")
        CriarProduto parameters,
        @WebParam(partName = "token", name = "token", targetNamespace = "http://ws.v1.api.already.reqs.com.br/", header = true)
        Token token
    ) throws AuthorizationException;
}
